import { JSONDef, Indicator, Close } from "../types";

export interface {{name}}Args {} 

export default class {{name}} implements Indicator<{{name}}Args> { 
  constructor() {} 
  next(value: number): number {}
  nextBar(bar: Close): number {
    return this.next(bar.close);
  }
  reset(): void {}
  toString(): string {
    return `{{name}}()`;
  }
  toJSON(): JSONDef<{{name}}Args> { 
    return { 
      $type: {{name}}.key,
    };
  } 
  static display({}: {{name}}Args, value: string): string {
    return `{{name}}(${value})`;
  }
  static readonly key = "finance.tr.{{name}}";
  static from({}: {{name}}Args): {{name}} { 
    return new {{name}}();
  }
}
